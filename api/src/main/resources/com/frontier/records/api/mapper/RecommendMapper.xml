<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.frontier.records.api.mapper.RecommendMapper">
  <select id="selectAllRecentMusics" resultType="com.frontier.records.api.model.Music">
    SELECT
      m.music_id AS musicId,
      m.music_title AS musicTitle,
      m.music_url AS musicUrl,
      m.music_image AS musicImage,
      m.running_time AS runningTime,
      m.play_count AS playCount,
      a.artist_id AS artistId,
      a.artist_name AS artistName,
      a.artist_image AS artistImage,
      (SELECT COUNT(1) FROM like_moment lm WHERE lm.music_id = m.music_id) AS totalLikeCount
    FROM music m

    INNER JOIN artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0

    WHERE 1=1
    AND m.deleted = 0
    AND m.disabled = 0
    ORDER BY m.register_datetime DESC
    LIMIT #{startOffset}, #{size}
  </select>

  <select id="selectRecentMusicTotalCount" resultType="int">
    SELECT COUNT(1)
    FROM music m
    INNER JOIN artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0
    WHERE 1=1
    AND m.deleted = 0
    AND m.disabled = 0
  </select>

  <select id="selectRecentMusicCurrentCount" resultType="int">
    SELECT COUNT(1)
    FROM music m
    INNER JOIN artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0
    WHERE 1=1
    AND m.deleted = 0
    AND m.disabled = 0
    LIMIT #{startOffset}, #{size}
  </select>

  <select id="selectAllWeeklyHotMusics" resultType="com.frontier.records.api.model.Music">
    SELECT
      m.music_id AS musicId,
      m.music_title AS musicTitle,
      m.music_url AS musicUrl,
      m.music_image AS musicImage,
      m.running_time AS runningTime,
      m.play_count AS playCount,
      a.artist_id AS artistId,
      a.artist_name AS artistName,
      a.artist_image AS artistImage,
      (SELECT COUNT(1) FROM like_moment lm WHERE lm.music_id = m.music_id) AS totalLikeCount
    FROM music m
    INNER JOIN artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0
    WHERE 1=1
      AND m.deleted = 0
      AND m.disabled = 0
      AND m.register_datetime <![CDATA[ <= ]]> NOW()
      AND m.register_datetime <![CDATA[ > ]]> DATE_ADD(NOW(), INTERVAL -1 WEEK)
    ORDER BY m.play_count DESC,
             m.view_count DESC,
             (SELECT COUNT(1) FROM comment c WHERE c.music_id = m.music_id) DESC,
             m.register_datetime DESC
    LIMIT #{size}
  </select>
</mapper>