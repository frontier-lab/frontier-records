<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.frontier.records.api.mapper.MusicMapper">
  <resultMap id="musicDetail" type="com.frontier.records.api.model.Music">
    <result column="music_id" property="musicId"/>
    <result column="music_title" property="musicTitle"/>
    <result column="lyrics" property="lyrics"/>
    <result column="music_url" property="musicUrl"/>
    <result column="music_image" property="musicImage"/>
    <result column="running_time" property="runningTime"/>
    <result column="view_count" property="viewCount"/>
    <result column="play_count" property="playCount"/>
    <result column="register_datetime" property="registerDateTime"/>
    <result column="modify_datetime" property="modifyDateTime"/>
    <result column="artist_id" property="artistId"/>
    <result column="artist_name" property="artistName"/>
    <result column="artist_image" property="artistImage"/>
    <result column="total_like_count" property="totalLikeCount"/>
    <collection column="music_id" property="likeMoments" javaType="java.util.ArrayList" ofType="com.frontier.records.api.model.LikeMoment" select="selectAllLikeMomentsByMusicId"/>
    <collection column="music_id" property="tags" javaType="java.util.ArrayList" ofType="com.frontier.records.api.model.Tag" select="selectAllTagsByMusicId"/>
  </resultMap>

  <select id="selectAllLikeMomentsByMusicId" parameterType="java.util.Map" resultType="com.frontier.records.api.model.LikeMoment">
    SELECT
      moment,
      like_count
    FROM like_moment
    WHERE music_id = #{musicId}
    ORDER By moment ASC
  </select>

  <select id="selectAllTagsByMusicId" parameterType="java.util.Map" resultType="com.frontier.records.api.model.Tag">
    SELECT
      t.tag_id,
      t.tag_name
    FROM tag_music tm
    INNER JOIN tag t ON t.tag_id = tm.tag_id
    WHERE music_id = #{musicId}
    ORDER By tm.register_datetime ASC, tm.modify_datetime ASC, tm.tag_musiq_seq ASC
  </select>

  <select id="selectOneMusicDetail" resultMap="musicDetail">
    SELECT
      m.music_id AS music_id,
      m.music_title AS music_title,
      m.lyrics AS lyrics,
      m.music_url AS music_url,
      m.music_image AS music_image,
      m.running_time AS running_time,
      m.view_count AS view_count,
      m.play_count AS play_count,
      m.register_datetime AS register_datetime,
      m.modify_datetime AS modify_datetime,
      a.artist_id AS artist_id,
      a.artist_name AS artist_name,
      a.artist_image AS artist_image,
      (SELECT count(*) FROM like_moment lm WHERE lm.music_id = m.music_id) AS total_like_count
    FROM music m
    LEFT OUTER JOIN artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0

    WHERE 1=1
    AND m.music_id = #{musicId}
    AND m.deleted = 0
    AND m.disabled = 0
  </select>

  <select id="selectMusicSummariesByTag" resultType="com.frontier.records.api.model.MusicSummary">
    SELECT
      m.music_id AS musicId,
      m.music_title AS musicTitle,
      m.music_url AS musicUrl,
      m.music_Image AS musicImage,
      a.artist_name AS artistName,
      a.artist_image AS artistImage
    FROM music m
    INNER JOIN tag_music tm ON tm.music_id = m.music_id
      AND tm.tag_id = #{tagId}
    INNER JOIN  artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0
    WHERE 1=1
    AND m.deleted = 0
    AND m.disabled = 0
    ORDER BY m.register_datetime DESC
    LIMIT #{startOffset}, #{size}
  </select>

  <select id="getMusicSummaryTotalCountByTag" resultType="int">
    SELECT COUNT(1)
    FROM music m
    INNER JOIN tag_music tm ON tm.music_id = m.music_id
      AND tm.tag_id = #{tagId}
    INNER JOIN  artist a ON a.artist_id = m.artist_id
      AND a.deleted = 0
      AND a.disabled = 0
    WHERE 1=1
    AND m.deleted = 0
    AND m.disabled = 0
  </select>

  <update id="updateMusicPlayCount">
    UPDATE music
    SET play_count = play_count + 1
    WHERE  music_id = #{musicId}
  </update>

  <update id="updateMusicViewCount">
    UPDATE music
    SET view_count = view_count + 1
    WHERE  music_id = #{musicId}
  </update>
</mapper>

